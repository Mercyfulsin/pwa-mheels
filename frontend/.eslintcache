[{"C:\\Users\\AndresRuiz\\Desktop\\WebDev\\pwa-mheels\\frontend\\src\\index.js":"1","C:\\Users\\AndresRuiz\\Desktop\\WebDev\\pwa-mheels\\frontend\\src\\react-auth0-spa.js":"2","C:\\Users\\AndresRuiz\\Desktop\\WebDev\\pwa-mheels\\frontend\\src\\App\\App.js":"3","C:\\Users\\AndresRuiz\\Desktop\\WebDev\\pwa-mheels\\frontend\\src\\App\\utils\\history.js":"4","C:\\Users\\AndresRuiz\\Desktop\\WebDev\\pwa-mheels\\frontend\\src\\App\\utils\\initFontAwesome.js":"5","C:\\Users\\AndresRuiz\\Desktop\\WebDev\\pwa-mheels\\frontend\\src\\App\\components\\PrivateRoute.js":"6","C:\\Users\\AndresRuiz\\Desktop\\WebDev\\pwa-mheels\\frontend\\src\\App\\components\\NavBar.js":"7","C:\\Users\\AndresRuiz\\Desktop\\WebDev\\pwa-mheels\\frontend\\src\\App\\components\\TwitterPost.js":"8","C:\\Users\\AndresRuiz\\Desktop\\WebDev\\pwa-mheels\\frontend\\src\\App\\components\\Loading.js":"9","C:\\Users\\AndresRuiz\\Desktop\\WebDev\\pwa-mheels\\frontend\\src\\App\\pages\\Validate.js":"10","C:\\Users\\AndresRuiz\\Desktop\\WebDev\\pwa-mheels\\frontend\\src\\App\\pages\\Profile.js":"11","C:\\Users\\AndresRuiz\\Desktop\\WebDev\\pwa-mheels\\frontend\\src\\App\\pages\\Home.js":"12","C:\\Users\\AndresRuiz\\Desktop\\WebDev\\pwa-mheels\\frontend\\src\\App\\pages\\List.js":"13","C:\\Users\\AndresRuiz\\Desktop\\WebDev\\pwa-mheels\\frontend\\src\\App\\pages\\BusinessInfo.js":"14","C:\\Users\\AndresRuiz\\Desktop\\WebDev\\pwa-mheels\\frontend\\src\\App\\pages\\Customer.js":"15","C:\\Users\\AndresRuiz\\Desktop\\WebDev\\pwa-mheels\\frontend\\src\\App\\components\\Landing\\index.js":"16","C:\\Users\\AndresRuiz\\Desktop\\WebDev\\pwa-mheels\\frontend\\src\\App\\pages\\Menu\\index.js":"17","C:\\Users\\AndresRuiz\\Desktop\\WebDev\\pwa-mheels\\frontend\\src\\App\\components\\VendorLocation.js":"18","C:\\Users\\AndresRuiz\\Desktop\\WebDev\\pwa-mheels\\frontend\\src\\App\\utils\\API.js":"19","C:\\Users\\AndresRuiz\\Desktop\\WebDev\\pwa-mheels\\frontend\\src\\App\\components\\MenuDisplay.js":"20","C:\\Users\\AndresRuiz\\Desktop\\WebDev\\pwa-mheels\\frontend\\src\\App\\components\\Category.js":"21","C:\\Users\\AndresRuiz\\Desktop\\WebDev\\pwa-mheels\\frontend\\src\\App\\components\\MapApp.js":"22","C:\\Users\\AndresRuiz\\Desktop\\WebDev\\pwa-mheels\\frontend\\src\\App\\components\\Searchbar\\index.js":"23","C:\\Users\\AndresRuiz\\Desktop\\WebDev\\pwa-mheels\\frontend\\src\\App\\components\\Maps.js":"24","C:\\Users\\AndresRuiz\\Desktop\\WebDev\\pwa-mheels\\frontend\\src\\App\\components\\places.js":"25"},{"size":737,"mtime":1608158412071,"results":"26","hashOfConfig":"27"},{"size":2613,"mtime":1608158412072,"results":"28","hashOfConfig":"27"},{"size":1986,"mtime":1608158412040,"results":"29","hashOfConfig":"27"},{"size":87,"mtime":1608158412070,"results":"30","hashOfConfig":"27"},{"size":451,"mtime":1608158412070,"results":"31","hashOfConfig":"27"},{"size":985,"mtime":1608158412062,"results":"32","hashOfConfig":"27"},{"size":7398,"mtime":1608158412062,"results":"33","hashOfConfig":"27"},{"size":5381,"mtime":1608158412064,"results":"34","hashOfConfig":"27"},{"size":374,"mtime":1608158412061,"results":"35","hashOfConfig":"27"},{"size":971,"mtime":1608158412069,"results":"36","hashOfConfig":"27"},{"size":2333,"mtime":1608158412068,"results":"37","hashOfConfig":"27"},{"size":402,"mtime":1608158412066,"results":"38","hashOfConfig":"27"},{"size":1233,"mtime":1608158412066,"results":"39","hashOfConfig":"27"},{"size":9886,"mtime":1608158412065,"results":"40","hashOfConfig":"27"},{"size":1088,"mtime":1608158412066,"results":"41","hashOfConfig":"27"},{"size":1872,"mtime":1608158412060,"results":"42","hashOfConfig":"27"},{"size":5157,"mtime":1608158412067,"results":"43","hashOfConfig":"27"},{"size":1152,"mtime":1608158412064,"results":"44","hashOfConfig":"27"},{"size":2983,"mtime":1608681969096,"results":"45","hashOfConfig":"27"},{"size":2284,"mtime":1608158412062,"results":"46","hashOfConfig":"27"},{"size":443,"mtime":1608158412058,"results":"47","hashOfConfig":"27"},{"size":3912,"mtime":1609178624266,"results":"48","hashOfConfig":"27"},{"size":2708,"mtime":1608158412063,"results":"49","hashOfConfig":"27"},{"size":3355,"mtime":1608158412061,"results":"50","hashOfConfig":"27"},{"size":508,"mtime":1608158412065,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"pctzai",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"54"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111"},"C:\\Users\\AndresRuiz\\Desktop\\WebDev\\pwa-mheels\\frontend\\src\\index.js",[],["112","113"],"C:\\Users\\AndresRuiz\\Desktop\\WebDev\\pwa-mheels\\frontend\\src\\react-auth0-spa.js",[],"C:\\Users\\AndresRuiz\\Desktop\\WebDev\\pwa-mheels\\frontend\\src\\App\\App.js",[],"C:\\Users\\AndresRuiz\\Desktop\\WebDev\\pwa-mheels\\frontend\\src\\App\\utils\\history.js",[],"C:\\Users\\AndresRuiz\\Desktop\\WebDev\\pwa-mheels\\frontend\\src\\App\\utils\\initFontAwesome.js",[],"C:\\Users\\AndresRuiz\\Desktop\\WebDev\\pwa-mheels\\frontend\\src\\App\\components\\PrivateRoute.js",[],"C:\\Users\\AndresRuiz\\Desktop\\WebDev\\pwa-mheels\\frontend\\src\\App\\components\\NavBar.js",["114","115","116"],"import React, { useState, useEffect } from \"react\";\r\nimport { NavLink as RouterNavLink } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport VendorGeo from \"./VendorLocation\"\r\nimport API from \"../utils/API\";\r\n\r\nimport {\r\n  Collapse,\r\n  Container,\r\n  Navbar,\r\n  NavbarToggler,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Button,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem\r\n} from \"reactstrap\";\r\nimport logo from \"../assets/tortaLogo_transparent.png\";\r\n\r\nimport { useAuth0 } from \"../../react-auth0-spa\";\r\n\r\nconst NavBar = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  let [storeOpen, setStoreOpen] = useState(false);\r\n  const { user, isAuthenticated, loginWithRedirect, logout } = useAuth0();\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  useEffect(() => {\r\n    const grabStatus = () => {\r\n      API.getVendor(user.sub)\r\n        .then(vendor => {\r\n          setStoreOpen(storeOpen = vendor.data[0].status);\r\n        })\r\n        .catch(err => console.log(err));\r\n    };\r\n    isAuthenticated ? grabStatus() : console.log(\"\");\r\n  });\r\n\r\n  const shopStatus = (prop) => {\r\n    console.log(\"I have received \", prop);\r\n    API.getVendor(user.sub)\r\n      .then(vendor => {\r\n        setStoreOpen(storeOpen = !storeOpen);\r\n\r\n        const newLocation = {\r\n          id: vendor.data[0]._id, location: { location: prop }\r\n        };\r\n        API.setVendorLocation(newLocation)\r\n          .then(completed => { })\r\n          .catch(err => console.log(\"Location Err:\", err));\r\n\r\n        const newStatus = { id: vendor.data[0]._id, status: storeOpen }\r\n        API.updateStatus(newStatus)\r\n          .then(updated => { })\r\n          .catch(err => console.log(\"Updated Err:\", err));\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  const logoutWithRedirect = () =>\r\n    logout({\r\n      returnTo: window.location.origin\r\n    });\r\n\r\n  return (\r\n    <div className=\"nav-container\">\r\n      <Navbar style={{ backgroundColor: '#fc0' }} light expand=\"md\">\r\n        <Container>\r\n          <NavLink\r\n            tag={RouterNavLink}\r\n            to=\"/\"\r\n          >\r\n            <img height='50px' width='60px' style={{ marginRight: '10px' }} src={logo} alt=\"Mheels logo\"></img>\r\n          </NavLink>\r\n          <NavbarToggler onClick={toggle} />\r\n          <Collapse isOpen={isOpen} navbar>\r\n            <Nav className=\"mr-auto\" navbar>\r\n            </Nav>\r\n            {/* Actually display on the screen */}\r\n            <Nav className=\"d-none d-md-block\" navbar>\r\n              {/* if the user IS logged in, display the circle drop down menu */}\r\n              {isAuthenticated && (\r\n                <UncontrolledDropdown nav inNavbar>\r\n                  <DropdownToggle nav caret id=\"profileDropDown\">\r\n                    <img\r\n                      src={user.picture}\r\n                      alt=\"Profile\"\r\n                      className=\"nav-user-profile rounded-circle\"\r\n                      width=\"50\"\r\n                    />\r\n                  </DropdownToggle>\r\n                  <DropdownMenu>\r\n                    <DropdownItem header>{user.name}</DropdownItem>\r\n                    <DropdownItem\r\n                      tag={RouterNavLink}\r\n                      to=\"/profile\"\r\n                      className=\"dropdown-profile\"\r\n                      activeClassName=\"router-link-exact-active\"\r\n                    >\r\n                      <FontAwesomeIcon icon=\"user\" className=\"mr-3\" /> Profile\r\n                    </DropdownItem>\r\n                    <DropdownItem\r\n                      tag={RouterNavLink}\r\n                      to=\"/twitter\"\r\n                      className=\"dropdown-profile\"\r\n                    >\r\n                      <FontAwesomeIcon icon=\"comment\" className=\"mr-3\" /> Social Media\r\n                    </DropdownItem>\r\n                    <DropdownItem\r\n                      className=\"dropdown-profile\"\r\n                    >{storeOpen && (\r\n                      <VendorGeo icon=\"map-marker-alt\" func={shopStatus} className=\"mr-3\">Close Up</VendorGeo>)}\r\n                      {!storeOpen && (\r\n                        <VendorGeo icon=\"map-marker-alt\" func={shopStatus} className=\"mr-3\">Go Live</VendorGeo>)}\r\n                    </DropdownItem>\r\n                    <DropdownItem\r\n                      tag={RouterNavLink}\r\n                      to=\"/menu\"\r\n                      className=\"dropdown-profile\"\r\n                    >\r\n                      <FontAwesomeIcon icon=\"utensils\" className=\"mr-3\" /> Menu\r\n                    </DropdownItem>\r\n                    <DropdownItem\r\n                      id=\"qsLogoutBtn\"\r\n                      onClick={() => logoutWithRedirect()}\r\n                    >\r\n                      <FontAwesomeIcon icon=\"power-off\" className=\"mr-3\" /> Log\r\n                      out\r\n                    </DropdownItem>\r\n                  </DropdownMenu>\r\n                </UncontrolledDropdown>\r\n              )}\r\n            </Nav>\r\n            {/* This is the Link to Route */}\r\n            {isAuthenticated && (\r\n              <Nav\r\n                className=\"d-md-none justify-content-between\"\r\n                navbar\r\n                style={{ minHeight: 170 }}\r\n              >\r\n                <NavItem>\r\n                  <span className=\"user-info\">\r\n                    <img\r\n                      src={user.picture}\r\n                      alt=\"Profile\"\r\n                      className=\"nav-user-profile d-inline-block rounded-circle mr-3\"\r\n                      width=\"50\"\r\n                    />\r\n                    <h6 className=\"d-inline-block\">{user.name}</h6>\r\n                  </span>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <FontAwesomeIcon icon=\"user\" className=\"mr-3\" />\r\n                  <RouterNavLink\r\n                    to=\"/profile\"\r\n                  >\r\n                    Profile\r\n                  </RouterNavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <FontAwesomeIcon icon=\"comment\" className=\"mr-3\" />\r\n                  <RouterNavLink\r\n                    to=\"/twitter\"\r\n                  >\r\n                    Social Media\r\n                  </RouterNavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  {storeOpen && (\r\n                    <VendorGeo icon=\"map-marker-alt\" func={shopStatus} className=\"mr-3\">Close Up</VendorGeo>)}\r\n                  {!storeOpen && (\r\n                    <VendorGeo icon=\"map-marker-alt\" func={shopStatus} className=\"mr-3\">Go Live</VendorGeo>)}\r\n                </NavItem>\r\n                <NavItem>\r\n                  <FontAwesomeIcon icon=\"utensils\" className=\"mr-3\" />\r\n                  <RouterNavLink\r\n                    to=\"/menu\"\r\n                  >\r\n                    Menu\r\n                  </RouterNavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <FontAwesomeIcon icon=\"power-off\" className=\"mr-3\" />\r\n                  <RouterNavLink\r\n                    to=\"#\"\r\n                    id=\"qsLogoutBtn\"\r\n                    onClick={() => logoutWithRedirect()}\r\n                  >\r\n                    Log out\r\n                  </RouterNavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            )}\r\n          </Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","C:\\Users\\AndresRuiz\\Desktop\\WebDev\\pwa-mheels\\frontend\\src\\App\\components\\TwitterPost.js",[],"C:\\Users\\AndresRuiz\\Desktop\\WebDev\\pwa-mheels\\frontend\\src\\App\\components\\Loading.js",[],"C:\\Users\\AndresRuiz\\Desktop\\WebDev\\pwa-mheels\\frontend\\src\\App\\pages\\Validate.js",["117"],"import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Loading from \"../components/Loading\";\r\nimport API from \"../utils/API\";\r\nimport { useAuth0 } from \"../../react-auth0-spa\";\r\n\r\nconst ValidateUser = (prop) => {\r\n    const { user } = useAuth0();\r\n    prop.func(user.sub);\r\n    return <Loading />\r\n}\r\n\r\nclass Validate extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            status: 0\r\n        }\r\n    }\r\n\r\n    getUser = id => {\r\n        API.getVendor(id)\r\n            .then(reply => {\r\n                reply.data.length ? this.setState({ status: 1 }) : this.setState({ status: -1 });\r\n            });\r\n    }\r\n\r\n    render() {\r\n        switch (this.state.status) {\r\n            case 0: return <ValidateUser func={this.getUser} />\r\n            case 1: return <Redirect to='/' />\r\n            case -1: return <Redirect to='/info' />\r\n        }\r\n    }\r\n};\r\n\r\nexport default Validate;\r\n","C:\\Users\\AndresRuiz\\Desktop\\WebDev\\pwa-mheels\\frontend\\src\\App\\pages\\Profile.js",["118"],"import React, { useState, useEffect } from \"react\";\r\nimport { Card, Collapse, CardFooter, CardText, CardBody, CardHeader, Container, Row, Col } from 'reactstrap';\r\nimport Loading from \"../components/Loading\";\r\nimport { useAuth0 } from \"../../react-auth0-spa\";\r\nimport BusinessInfo from \"../pages/BusinessInfo\";\r\nimport API from \"../utils/API\"\r\n\r\nconst Profile = (prop) => {\r\n  const { loading, user } = useAuth0();\r\n  const [isUpdated, setIsUpdated] = useState(false);\r\n  const [vendorData, setVendorData] = useState([]);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  useEffect(() => {\r\n    if (!isUpdated) {\r\n      getVendorInfo();\r\n      setIsUpdated(true);\r\n    }\r\n  });\r\n\r\n  function getVendorInfo() {\r\n    API.getVendor(user.sub)\r\n      .then(result => {\r\n        console.log(result)\r\n        if (result.data && result.data.length) {\r\n          const vendorInfo = result.data[0] != null ? result.data[0] : null;\r\n          setVendorData(vendorInfo);\r\n        }\r\n      })\r\n  }\r\n  if (loading || !user) {\r\n    return <Loading />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Container className=\"mb-5\">\r\n        <Row>\r\n          <Col sm=\"12\">\r\n            <Card >\r\n              <CardHeader tag=\"h5\" className=\"text-center\" style={{ color: '#FA783F' }}>\r\n                Business Info Summary\r\n                </CardHeader>\r\n              <CardBody>\r\n                <CardText>Owner Name: {vendorData ? vendorData.owner : \"\"}</CardText><hr></hr>\r\n                <CardText>Business Name: {vendorData ? vendorData.storeName : \"\"}</CardText><hr></hr>\r\n                <CardText>Category: {vendorData ? vendorData.categories : \"\"}</CardText><hr></hr>\r\n                <CardText>City: {vendorData ? vendorData.city : \"\"}</CardText><hr></hr>\r\n                <CardText>State: {vendorData ? vendorData.state : \"\"}</CardText>\r\n              </CardBody>\r\n              <CardFooter tag=\"h5\" className=\"text-center\" style={{ color: '#FA783F' }} onClick={toggle}>Update Business Information</CardFooter>\r\n              <Collapse isOpen={isOpen}>\r\n                <BusinessInfo vendorId={user.sub} toggler={toggle} setIsUpdated={setIsUpdated} />\r\n              </Collapse>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","C:\\Users\\AndresRuiz\\Desktop\\WebDev\\pwa-mheels\\frontend\\src\\App\\pages\\Home.js",[],"C:\\Users\\AndresRuiz\\Desktop\\WebDev\\pwa-mheels\\frontend\\src\\App\\pages\\List.js",[],"C:\\Users\\AndresRuiz\\Desktop\\WebDev\\pwa-mheels\\frontend\\src\\App\\pages\\BusinessInfo.js",["119"],"import React, { Component } from 'react';\r\nimport { Button, Form, FormGroup, Label, Input, Row, Col, Container, Card, CardBody, CardHeader } from 'reactstrap';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Category from '../components/Category';\r\nimport API from '../utils/API';\r\n\r\nclass BusinessInfo extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            auth0: this.props.user,\r\n            owner: '',\r\n            storeName: '',\r\n            categories: '',\r\n            city: '',\r\n            state: '',\r\n            items: [],\r\n            status: 0,\r\n            vendor: [],\r\n            isupdate: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ items: Category });\r\n        if (this.props.vendorId) {\r\n            this.setState({ isupdate: true });\r\n            API.getVendor(this.props.vendorId)\r\n                .then(result => {\r\n                    console.log(result)\r\n                    if (result.data && result.data.length) {\r\n                        const vendorInfo = result.data[0] != null ? result.data[0] : null;\r\n\r\n                        this.setState({ vendor: vendorInfo });\r\n                        this.setState({ owner: this.state.vendor.owner });\r\n                        this.setState({ storeName: this.state.vendor.storeName });\r\n                        this.setState({ categories: this.state.vendor.categories });\r\n                        this.setState({ city: this.state.vendor.city });\r\n                        this.setState({ state: this.state.vendor.state });\r\n                        this.setState({ menu: this.state.vendor.menu });\r\n                    }\r\n                })\r\n        }\r\n    }\r\n\r\n    handleInputChange = event => {\r\n        const { name, value } = event.target;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    handleFormSubmit = e => {\r\n        if (this.state.isupdate) {\r\n            this.updateVendor(e);\r\n        } else {\r\n            this.createVendor(e);\r\n        }\r\n\r\n    }\r\n\r\n    // Create a new Vendor\r\n    createVendor = () => {\r\n        const menuObj = { menuName: this.state.storeName, food: [] };\r\n\r\n        // All Vendors need a Menu, create one and save it's _ID as ref for Vendor\r\n        API.createMenu(menuObj)\r\n            .then(reply => {\r\n\r\n                // Checking the ID and what type, should be ObjectId (MongoDB)\r\n                console.log(\"This is the reply: \", reply, reply.data._id);\r\n                console.log(\"Type of ID\", typeof (reply.data._id));\r\n\r\n                API.createTweetTable({ tweet: [] })\r\n                    .then(table => {\r\n                        let newVendor = {\r\n                            storeName: this.state.storeName,\r\n                            owner: this.state.owner,\r\n                            ownerId: this.state.auth0,\r\n                            location: [0, 0],\r\n                            status: false,\r\n                            tweetTable: table.data._id,\r\n                            categories: [this.state.categories],\r\n                            city: this.state.city ? this.state.city : '',\r\n                            state: this.state.state ? this.state.state : '',\r\n                            menu: reply.data._id\r\n                        }\r\n                        console.log(\"Object to be Submitted: \", newVendor);\r\n                        API.createVendor(newVendor)\r\n                            .then(reply => {\r\n                                console.log(reply);\r\n                                this.setState({ status: 1 });\r\n                            }).catch(err => console.log(\"Vendor err: \", err));\r\n                    })\r\n\r\n            }).catch(err => console.log(err));\r\n    }\r\n\r\n    updateVendor = e => {\r\n        e.preventDefault();\r\n        this.props.toggler();\r\n        let updatedVendor = {\r\n            id: this.state.vendor._id,\r\n            storeName: this.state.storeName,\r\n            owner: this.state.owner,\r\n            ownerId: this.state.auth0,\r\n            categories: [this.state.categories],\r\n            city: this.state.city ? this.state.city : '',\r\n            state: this.state.state ? this.state.state : '',\r\n            menu: this.state.vendor.menu\r\n        }\r\n        API.updateVendor(updatedVendor)\r\n            .then(reply => {\r\n                this.setState({ status: 0 });\r\n                this.props.setIsUpdated(false);\r\n            }).catch(err => console.log(\"Vendor err: \", err));\r\n    }\r\n\r\n    render() {\r\n        switch (this.state.status) {\r\n            case 0:\r\n                return (\r\n                    <Container className=\"mb-3\">\r\n                        <Row>\r\n                            <Col sm=\"12\">\r\n                                <Card>\r\n                                    <CardHeader ><strong>Business Information</strong> </CardHeader>\r\n                                    <CardBody>\r\n                                        <Form>\r\n                                            <FormGroup>\r\n                                                <Input\r\n                                                    type=\"text\"\r\n                                                    name=\"owner\"\r\n                                                    id=\"contact\"\r\n                                                    onChange={this.handleInputChange}\r\n                                                    placeholder=\"Owner\"\r\n                                                    defaultValue={this.state.vendor.owner ? this.state.vendor.owner : \"\"}\r\n                                                />\r\n                                            </FormGroup>\r\n                                            <FormGroup>\r\n                                                <Input\r\n                                                    type=\"text\"\r\n                                                    name=\"storeName\"\r\n                                                    id=\"business-name\"\r\n                                                    onChange={this.handleInputChange}\r\n                                                    placeholder=\"Business name\"\r\n                                                    defaultValue={this.state.vendor.storeName ? this.state.vendor.storeName : \"\"}\r\n                                                />\r\n                                            </FormGroup>\r\n                                            <FormGroup>\r\n                                                <Input\r\n                                                    type=\"text\"\r\n                                                    name=\"city\"\r\n                                                    onChange={this.handleInputChange}\r\n                                                    placeholder=\"City (optional)\"\r\n                                                    defaultValue={this.state.vendor.city ? this.state.vendor.city : \"\"}\r\n                                                />\r\n                                            </FormGroup>\r\n                                            <FormGroup>\r\n                                                <Input\r\n                                                    type=\"text\"\r\n                                                    name=\"state\"\r\n                                                    onChange={this.handleInputChange}\r\n                                                    placeholder=\"State (optional)\"\r\n                                                    defaultValue={this.state.vendor.state ? this.state.vendor.state : \"\"}\r\n                                                />\r\n                                            </FormGroup>\r\n                                            <FormGroup>\r\n                                                <Label for=\"category-list\">Category</Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"categories\"\r\n                                                    id=\"category-list\"\r\n                                                    onChange={this.handleInputChange}\r\n                                                    placeholder=\"Select Business Category\"\r\n                                                >\r\n                                                    <option>{this.state.vendor.categories ? this.state.vendor.categories : \"Select Category\"}</option>\r\n                                                    {this.state.items.map(choice =>\r\n                                                        <option key={choice}>\r\n                                                            {choice}\r\n                                                        </option>\r\n                                                    )}\r\n                                                </Input>\r\n                                            </FormGroup>\r\n                                        </Form>\r\n                                        <Button\r\n                                            color=\"success\"\r\n                                            disabled={!(this.state.owner && this.state.storeName)}\r\n                                            onClick={this.handleFormSubmit}\r\n                                        >\r\n                                            Submit\r\n                                    </Button>\r\n                                    </CardBody>\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                )\r\n            case 1:\r\n                return <Redirect to='/menu' />\r\n            case 2:\r\n                return (<div>\r\n                    <Redirect to='/profile' /></div>)\r\n        }\r\n    }\r\n}\r\nexport default BusinessInfo;","C:\\Users\\AndresRuiz\\Desktop\\WebDev\\pwa-mheels\\frontend\\src\\App\\pages\\Customer.js",["120"],"import React, { useState, useEffect } from 'react';\r\nimport Searchbar from '../components/Searchbar';\r\nimport MenuDisplay from '../components/MenuDisplay';\r\nimport GoogleApiWrapper from '../components/MapApp';\r\nimport { Container, Row, Col } from 'reactstrap';\r\n\r\n\r\nconst Customer = () => {\r\n\r\n  const [active, setActive] = useState({ state: false });\r\n  const [menu, setMenu] = useState({ id: 0 });\r\n  const [query, setQuery] = useState({ term: null });\r\n  const changeState = bool => setActive({ state: bool });\r\n  const updateMenu = menuId => { setMenu({ id: menuId }) };\r\n  const updateQuery = term => { setQuery({ term: term }) };\r\n\r\n  return (\r\n    <Container className=\"mb-3\">\r\n      <Row>\r\n        <Col lg={4}>\r\n          {console.log(\"Customer Update:\", query)}\r\n          <Searchbar search={updateQuery} />\r\n          {active.state && (<MenuDisplay menu={menu.id} />)}\r\n        </Col>\r\n        <Col lg={8}>\r\n          <GoogleApiWrapper update={query} menu={updateMenu} active={changeState} />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Customer;\r\n","C:\\Users\\AndresRuiz\\Desktop\\WebDev\\pwa-mheels\\frontend\\src\\App\\components\\Landing\\index.js",[],"C:\\Users\\AndresRuiz\\Desktop\\WebDev\\pwa-mheels\\frontend\\src\\App\\pages\\Menu\\index.js",[],"C:\\Users\\AndresRuiz\\Desktop\\WebDev\\pwa-mheels\\frontend\\src\\App\\components\\VendorLocation.js",[],"C:\\Users\\AndresRuiz\\Desktop\\WebDev\\pwa-mheels\\frontend\\src\\App\\utils\\API.js",["121"],"import axios from \"axios\";\r\n\r\nexport default {\r\n  // Get User(Vendor)\r\n  getVendor: function (id) {\r\n    return axios.get(\"/api/vendor/\" + id);\r\n  },\r\n  getVendorLocation: function (id) {\r\n    axios.get(\"/api/vendor/\" + id)\r\n      .then(data => { let { location } = data.data[0]; return location })\r\n      .catch(err => { return err });\r\n  },\r\n  // Accepts Object with two keys (id and location) with id refering to vendor and location being Long+Lat in string csv notation(?)\r\n  setVendorLocation: function (obj) {\r\n    const { id, location } = obj;\r\n    console.log(location);\r\n    return axios.put(\"/api/vendor/\" + id, location);\r\n  },\r\n  // Gets every vendor\r\n  getVendors: function () {\r\n    return axios.get(\"/api/vendor\");\r\n  },\r\n  // Gets specific Menu (Requires Menu ID)\r\n  getMenu: function (id) {\r\n    return axios.get(\"/api/menu/\" + id);\r\n  },\r\n  // Removes Reference of Food from Menu (Object containts id which refers to menu and _id for food id)\r\n  removeFood: function (object) {\r\n    return axios.put(\"/api/menu/\" + object.id, { _id: object.foodId });\r\n  },\r\n  // Deletes Food from Food document (Requires unique food id)\r\n  deleteFood: function (foodId) {\r\n    return axios.delete(\"/api/food/\" + foodId);\r\n  },\r\n  // Saves a food to the food table database\r\n  createFood: function (foodObj, menuRef) {\r\n    const createdFood = { obj: foodObj, menu: menuRef };\r\n    return axios.post(\"/api/food/\", createdFood);\r\n  },\r\n  // Create Menu\r\n  createMenu: function (obj) {\r\n    return axios.post(\"/api/menu/\", obj);\r\n  },\r\n  createTweetTable: function (obj) {\r\n    return axios.post(\"/api/tweetTable/\", obj)\r\n  },\r\n  createVendor: function (obj) {\r\n    console.log(`Menu is ${obj['menu']} and type of ${typeof (obj['menu'])}`);\r\n    // obj['menu'] = ObjId(obj['menu']);\r\n    console.log(`Menu is ${obj['menu']} and type of ${typeof (obj['menu'])}`);\r\n    console.log(\"ObjectId'd the menu ref: \", obj);\r\n    return axios.post(\"/api/vendor/\", obj);\r\n  },\r\n  // Update vendor info\r\n  updateVendor: function (object) {\r\n    let body = {\r\n      owner: object.owner,\r\n      storeName: object.storeName,\r\n      city: object.city,\r\n      state: object.state,\r\n      categories: object.categories\r\n    }\r\n    console.log(object);\r\n    return axios.put(\"/api/vendor/\" + object.id, body);\r\n  },\r\n  // Update vendor custom tweet\r\n  updateCustomTweet: function (object) {\r\n    let tweet = {\r\n      customTweet: object.message\r\n    }\r\n    return axios.put(\"/api/vendor/\" + object.id, tweet)\r\n  },\r\n  updateStatus: function (object) {\r\n    const status = {\r\n      status: object.status\r\n    }\r\n    return axios.put(\"/api/vendor/\" + object.id, status);\r\n  },\r\n  // send tweet\r\n  sendTweet: function (obj) {\r\n    return axios.post(\"/api/twitter\", { body: obj });\r\n  },\r\n  saveTweet: function (tweetObj) {\r\n    return axios.post(\"/api/tweetTable/\" + tweetObj.id, { string: tweetObj.tweetMongoId });\r\n  },\r\n  getTweet: function (id) {\r\n    return axios.get(\"/api/twitter/\" + id);\r\n  }\r\n};\r\n","C:\\Users\\AndresRuiz\\Desktop\\WebDev\\pwa-mheels\\frontend\\src\\App\\components\\MenuDisplay.js",[],"C:\\Users\\AndresRuiz\\Desktop\\WebDev\\pwa-mheels\\frontend\\src\\App\\components\\Category.js",[],"C:\\Users\\AndresRuiz\\Desktop\\WebDev\\pwa-mheels\\frontend\\src\\App\\components\\MapApp.js",["122","123","124","125"],"import React, { Component } from 'react';\r\n// import { Map, GoogleApiWrapper } from 'google-maps-react';\r\n// import { InfoWindow, Marker } from 'google-maps-react';\r\n// import vendorSeed from '../../../../scripts/seedDB'\r\n\r\n\r\nimport { products } from './places';\r\n\r\nimport { GoogleApiWrapper, InfoWindow, Marker } from 'google-maps-react';\r\nimport CurrentLocation from './Maps';\r\nimport API from '../utils/API';\r\nconst query = {\r\n  term: \"\"\r\n};\r\n\r\nexport class MapContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      term: props.update,\r\n      funcMenu: props.menu,\r\n      funcActive: props.active,\r\n      vendors: null,\r\n      showingInfoWindow: false,\r\n      activeMarker: null,\r\n      selectedPlace: {}\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.grabVendors();\r\n  };\r\n\r\n  componentDidUpdate() {\r\n    console.log(\"Query:\", query);\r\n  }\r\n\r\n  grabVendors() {\r\n    API.getVendors()\r\n      .then(reply => { this.setState({ vendors: reply.data.filter(vendor => vendor.status) }); })\r\n      .catch(err => { console.log(err); return { err } });\r\n  };\r\n\r\n  onMarkerClick = (props, marker, e) => {\r\n    this.state.funcMenu(props.menu);\r\n    this.state.funcActive(true);\r\n    console.log(\"This here be the props:\", props);\r\n    this.setState({\r\n      selectedPlace: props,\r\n      activeMarker: marker,\r\n      showingInfoWindow: true\r\n    });\r\n  }\r\n\r\n  onClose = props => {\r\n    this.state.funcActive(false);\r\n    if (this.state.showingInfoWindow) {\r\n      this.setState({\r\n        showingInfoWindow: false,\r\n        activeMarker: null\r\n      });\r\n    }\r\n  };\r\n\r\n  //  filterCategory = (e) =>{\r\n  //   var categoryPicked = e;\r\n  //   console.log(categoryPicked+ \"category passed to filter category\")\r\n  // } \r\n\r\n  render() {\r\n    const product = products[0];\r\n\r\n    return (\r\n\r\n      <CurrentLocation\r\n        centerAroundCurrentLocation\r\n        google={this.props.google}\r\n      >\r\n        {/* Start looping thru vendors if exists */}\r\n        <Marker name={\"my location\"} icon={\"http://maps.google.com/mapfiles/ms/icons/blue-dot.png\"}/>\r\n        {this.state.vendors && (query.term ?\r\n          this.state.vendors.filter(vendor =>\r\n            vendor.categories.indexOf(query.term) != -1\r\n          ).map(vendor => (\r\n            <Marker onClick={this.onMarkerClick} name={<div>{vendor.storeName}<br></br><a href={`https://maps.google.com/?q=${vendor.location[0]},${vendor.location[1]}`} target=\"_blank\">Directions</a></div>} menu={vendor.menu} position={{ lat: vendor.location[0], lng: vendor.location[1] }} />\r\n          )) : this.state.vendors.map(vendor => (\r\n            <Marker onClick={this.onMarkerClick} name={<div>{vendor.storeName}<br></br><a href={`https://maps.google.com/?q=${vendor.location[0]},${vendor.location[1]}`} target=\"_blank\">Directions</a></div>} menu={vendor.menu} position={{ lat: vendor.location[0], lng: vendor.location[1] }} />\r\n          ))\r\n        )}\r\n        {/* \r\n        <Marker onClick={this.onMarkerClick} name={product.Name}\r\n          position={{ lat: 32.715736, lng: -117.161087 }} />\r\n        <Marker onClick={this.onMarkerClick} name={'here'}\r\n          position={{ lat: 32.7560, lng: -117.161087 }} />\r\n        <Marker onClick={this.onMarkerClick} name={'here'}\r\n          position={{ lat: 32.842674, lng: -117.257767 }} /> */}\r\n\r\n        <InfoWindow\r\n          marker={this.state.activeMarker}\r\n          visible={this.state.showingInfoWindow}\r\n          onClose={this.onClose}\r\n        >\r\n          <div>\r\n            <h4>{this.state.selectedPlace.name}</h4>\r\n          </div>\r\n        </InfoWindow>\r\n      </CurrentLocation>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: 'AIzaSyC0m0HwiwhrrVE3zCDSEvj_A1vY9od9kGQ'\r\n})(MapContainer);\r\n\r\nexport const categoryFilter = (e) => {\r\n  query.term = e;\r\n  console.log(e + \" here\");\r\n  //this.filterCategory(e);//figure out how to pass this to the function\r\n}\r\n","C:\\Users\\AndresRuiz\\Desktop\\WebDev\\pwa-mheels\\frontend\\src\\App\\components\\Searchbar\\index.js",[],"C:\\Users\\AndresRuiz\\Desktop\\WebDev\\pwa-mheels\\frontend\\src\\App\\components\\Maps.js",["126","127"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nconst mapStyles = {\r\n  map: {\r\n    position: 'absolute',\r\n    width: '100%',\r\n    height: '100%'\r\n  }\r\n};\r\n\r\nexport class CurrentLocation extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        const { lat, lng } = this.props.initialCenter;\r\n        this.state = {\r\n          currentLocation: {\r\n            lat: lat,\r\n            lng: lng\r\n          }\r\n        };\r\n      }\r\n\r\n      componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.google !== this.props.google) {\r\n          this.loadMap();\r\n        }\r\n        if (prevState.currentLocation !== this.state.currentLocation) {\r\n          this.recenterMap();\r\n        }\r\n      }\r\n\r\n      recenterMap() {\r\n        const map = this.map;\r\n        const current = this.state.currentLocation;\r\n    \r\n        const google = this.props.google;\r\n        const maps = google.maps;\r\n    \r\n        if (map) {//uses current location\r\n          let center = new maps.LatLng(current.lat, current.lng);\r\n          map.panTo(center);\r\n        }\r\n      }\r\n\r\n      componentDidMount() {\r\n        if (this.props.centerAroundCurrentLocation) {\r\n          if (navigator && navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition(pos => {\r\n              const coords = pos.coords;\r\n              this.setState({\r\n                currentLocation: {\r\n                  lat: coords.latitude,\r\n                  lng: coords.longitude\r\n                }\r\n              });\r\n            });\r\n          }\r\n        }\r\n        this.loadMap();\r\n      }\r\n\r\n      loadMap() {\r\n        if (this.props && this.props.google) {\r\n          // checks if google is available\r\n          const { google } = this.props;\r\n          const maps = google.maps;\r\n    \r\n          const mapRef = this.refs.map;\r\n    \r\n          // reference to the actual DOM element\r\n          const node = ReactDOM.findDOMNode(mapRef);\r\n    \r\n          let { zoom } = this.props;\r\n          const { lat, lng } = this.state.currentLocation;\r\n          const center = new maps.LatLng(lat, lng);\r\n          const mapConfig = Object.assign(\r\n            {},\r\n            {\r\n              center: center,\r\n              zoom: 11\r\n            }\r\n          );\r\n    \r\n          // maps.Map() is constructor that instantiates the map\r\n          this.map = new maps.Map(node, mapConfig);\r\n        }\r\n      }\r\n      renderChildren() {\r\n        const { children } = this.props;\r\n    \r\n        if (!children) return;\r\n    \r\n        return React.Children.map(children, c => {\r\n          if (!c) return;\r\n          return React.cloneElement(c, {\r\n            map: this.map,\r\n            google: this.props.google,\r\n            mapCenter: this.state.currentLocation\r\n          });\r\n        });\r\n      }\r\n\r\n      render() {\r\n        // const style = Object.assign({}, mapStyles.map, {height: '100vh', width: '100%'});\r\n       return (\r\n         <div>\r\n           <div style={{height: '50vh', width: '100%'}} ref=\"map\">\r\n             Loading map...\r\n           </div>\r\n           {this.renderChildren()}\r\n         </div>\r\n       );\r\n     }\r\n\r\n}\r\nexport default CurrentLocation;\r\n\r\nCurrentLocation.defaultProps = {\r\n  zoom: 14,\r\n  initialCenter: {\r\n    lat: 32.7757,\r\n    lng: -117.0719\r\n  },\r\n  centerAroundCurrentLocation: false,\r\n  visible: true\r\n};","C:\\Users\\AndresRuiz\\Desktop\\WebDev\\pwa-mheels\\frontend\\src\\App\\components\\places.js",["128"],"export const products  = [\r\n    {\r\n      id: 1,\r\n      Name: 'El Mexican',\r\n      Category: 'Mexican',\r\n      Geometry:[\r\n        32.7648, -117.2266\r\n      ]\r\n    },\r\n    {\r\n      id: 2,\r\n      Name: 'El Tacos',\r\n      Category:'Mexican',\r\n      Geometry:[\r\n        32.7353, -117.1490\r\n      ]\r\n    },\r\n    {\r\n        id: 3,\r\n        Name: 'El Fatty Patty',\r\n        Category: 'American',\r\n        Geometry:[\r\n          33.1261,-117.3115\r\n          ]\r\n    }\r\n  ]\r\n  \r\n  export default {\r\n      products,\r\n  }",{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","severity":1,"message":"134","line":15,"column":3,"nodeType":"135","messageId":"136","endLine":15,"endColumn":9},{"ruleId":"133","severity":1,"message":"137","line":28,"column":34,"nodeType":"135","messageId":"136","endLine":28,"endColumn":51},{"ruleId":"138","severity":1,"message":"139","line":35,"column":36,"nodeType":"140","endLine":35,"endColumn":57},{"ruleId":"141","severity":1,"message":"142","line":29,"column":9,"nodeType":"143","messageId":"144","endLine":33,"endColumn":10},{"ruleId":"138","severity":1,"message":"145","line":15,"column":3,"nodeType":"135","endLine":15,"endColumn":12,"suggestions":"146"},{"ruleId":"141","severity":1,"message":"142","line":120,"column":9,"nodeType":"143","messageId":"144","endLine":204,"endColumn":10},{"ruleId":"133","severity":1,"message":"147","line":1,"column":27,"nodeType":"135","messageId":"136","endLine":1,"endColumn":36},{"ruleId":"148","severity":1,"message":"149","line":3,"column":1,"nodeType":"150","endLine":89,"endColumn":3},{"ruleId":"133","severity":1,"message":"151","line":71,"column":11,"nodeType":"135","messageId":"136","endLine":71,"endColumn":18},{"ruleId":"152","severity":1,"message":"153","line":83,"column":51,"nodeType":"154","messageId":"155","endLine":83,"endColumn":53},{"ruleId":"156","severity":1,"message":"157","line":85,"column":171,"nodeType":"158","endLine":85,"endColumn":186},{"ruleId":"156","severity":1,"message":"157","line":87,"column":171,"nodeType":"158","endLine":87,"endColumn":186},{"ruleId":"133","severity":1,"message":"159","line":4,"column":7,"nodeType":"135","messageId":"136","endLine":4,"endColumn":16},{"ruleId":"133","severity":1,"message":"160","line":76,"column":17,"nodeType":"135","messageId":"136","endLine":76,"endColumn":21},{"ruleId":"148","severity":1,"message":"149","line":28,"column":3,"nodeType":"150","endLine":30,"endColumn":4},"no-native-reassign",["161"],"no-negated-in-lhs",["162"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'loginWithRedirect' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'storeOpen' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect contains a call to 'setIsUpdated'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [isUpdated, getVendorInfo] as a second argument to the useEffect Hook.",["163"],"'useEffect' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'product' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'mapStyles' is assigned a value but never used.","'zoom' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"164","fix":"165"},"Add dependencies array: [isUpdated, getVendorInfo]",{"range":"166","text":"167"},[722,722],", [isUpdated, getVendorInfo]"]